/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.io.IOException;
import java.lang.management.ManagementFactory;
import java.lang.management.MemoryMXBean;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.stream.Stream;

/**
 *
 * @author adamg
 */
public class Obrazovka extends javax.swing.JFrame {

    /**
     * Creates new form Obrazovka
     */
    public Obrazovka() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnZisti = new javax.swing.JButton();
        osText = new javax.swing.JTextField();
        userText = new javax.swing.JTextField();
        javText = new javax.swing.JTextField();
        usAdrMemText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jvAvMemMaxText = new javax.swing.JTextField();
        jvAvMemActText = new javax.swing.JTextField();
        jvAvMemInitText = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        usAdrText = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        jLabel1.setText("Informátor 8000");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 20, -1, -1));

        btnZisti.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnZisti.setText("Zisti info");
        btnZisti.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnZistiMouseReleased(evt);
            }
        });
        jPanel1.add(btnZisti, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 650, 250, 90));

        osText.setEditable(false);
        osText.setFont(new java.awt.Font("Segoe UI", 2, 15)); // NOI18N
        jPanel1.add(osText, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, 520, -1));

        userText.setEditable(false);
        userText.setFont(new java.awt.Font("Segoe UI", 2, 15)); // NOI18N
        jPanel1.add(userText, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, 450, -1));

        javText.setEditable(false);
        javText.setFont(new java.awt.Font("Segoe UI", 2, 15)); // NOI18N
        jPanel1.add(javText, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 180, 450, -1));

        usAdrMemText.setEditable(false);
        usAdrMemText.setFont(new java.awt.Font("Segoe UI", 2, 15)); // NOI18N
        jPanel1.add(usAdrMemText, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 350, 250, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("OS");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 30, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Používateľ");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Java - verzia");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Používateľský adresár");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Veľkosť používateľského priečinka");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 310, 50));

        jvAvMemMaxText.setEditable(false);
        jvAvMemMaxText.setFont(new java.awt.Font("Segoe UI", 2, 15)); // NOI18N
        jPanel1.add(jvAvMemMaxText, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 410, 250, -1));

        jvAvMemActText.setEditable(false);
        jvAvMemActText.setFont(new java.awt.Font("Segoe UI", 2, 15)); // NOI18N
        jPanel1.add(jvAvMemActText, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 470, 310, -1));

        jvAvMemInitText.setEditable(false);
        jvAvMemInitText.setFont(new java.awt.Font("Segoe UI", 2, 15)); // NOI18N
        jPanel1.add(jvAvMemInitText, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 550, 230, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("Celková dostupná pamäť pre JVM");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, -1, 50));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("Dostupná pamäť pre JVM");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 460, -1, 50));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setText("Voľná pamäť v JVM  pred alokáciou");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 540, -1, 50));

        usAdrText.setEditable(false);
        usAdrText.setColumns(20);
        usAdrText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        usAdrText.setRows(5);
        jScrollPane1.setViewportView(usAdrText);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 560, 80));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 800));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    // https://mkyong.com/java/how-to-get-size-of-a-directory-in-java/
    public static long getDirectorySizeJava8(Path path) {

      long size = 0;

      // need close Files.walk
      try (Stream<Path> walk = Files.walk(path)) {

          size = walk
                  //.peek(System.out::println) // debug
                  .filter(Files::isRegularFile)
                  .mapToLong(p -> {
                      // ugly, can pretty it with an extract method
                      try {
                          return Files.size(p);
                      } catch (IOException e) {
                          System.out.printf("Failed to get size of %s%n%s", p, e);
                          return 0L;
                      }
                  })
                  .sum();

      } catch (IOException e) {
          System.out.printf("IO errors %s", e);
      }

      return size;

  }
    
    
    private void btnZistiMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnZistiMouseReleased
        String osName = System.getProperty("os.name");
        String osVersion = System.getProperty("os.version");
        String osArchitecture = System.getProperty("os.arch");
        
        osText.setText(osName + " " + osVersion + " - " + osArchitecture);
        
        String userName = System.getProperty("user.name");
        
        userText.setText(userName);
        
        String javaVersion = System.getProperty("java.version");
        
        javText.setText(javaVersion);
        
        String userDirectory = System.getProperty("user.dir");
        
        usAdrText.setText(userDirectory);
        
        long userDirectorySize = getDirectorySizeJava8(Paths.get(userDirectory));
           
        
        usAdrMemText.setText((userDirectorySize/1000) + " KB");
        //https://stackoverflow.com/questions/12807797/java-get-available-memory
        //https://stackoverflow.com/questions/27959837/command-to-find-out-xms-and-xmx-variable-values-for-a-given-java-process
        MemoryMXBean memoryBean = ManagementFactory.getMemoryMXBean();
        long maxMemoryJVM = memoryBean.getHeapMemoryUsage().getMax();
        long usedMemoryJVM = memoryBean.getHeapMemoryUsage().getUsed();
        long initialMemoryJVM = memoryBean.getHeapMemoryUsage().getInit();
        
        long naMB = 1000000;
        
        jvAvMemActText.setText((maxMemoryJVM - usedMemoryJVM)/naMB + " MB");
        jvAvMemInitText.setText((initialMemoryJVM/naMB) + " MB");
        jvAvMemMaxText.setText((maxMemoryJVM/naMB) + " MB");
    }//GEN-LAST:event_btnZistiMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Obrazovka.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Obrazovka.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Obrazovka.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Obrazovka.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Obrazovka().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnZisti;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField javText;
    private javax.swing.JTextField jvAvMemActText;
    private javax.swing.JTextField jvAvMemInitText;
    private javax.swing.JTextField jvAvMemMaxText;
    private javax.swing.JTextField osText;
    private javax.swing.JTextField usAdrMemText;
    private javax.swing.JTextArea usAdrText;
    private javax.swing.JTextField userText;
    // End of variables declaration//GEN-END:variables
}
